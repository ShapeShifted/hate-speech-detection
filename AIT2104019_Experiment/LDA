{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1OQ2lf5oXOGH9ZcVNDoK5sVkPqxVxI3fm","authorship_tag":"ABX9TyM9YmgctjqI8KXCw5A6kRmr"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"oByjKcGdiwLZ"},"outputs":[],"source":["import pandas as pd\n","df = pd.read_csv(\"/content/drive/MyDrive/Thesis/posts1352_standard.csv\")"]},{"cell_type":"code","source":["#LDA model training\n","\n","import gensim.corpora as corpora\n","import gensim.models as models\n","\n","from ast import literal_eval\n","from pprint import pprint\n","\n","data_words = []\n","for x in df['PreprocessedToken']:\n","    data_words.append(literal_eval(x))\n","\n","# Create Dictionary\n","id2word = corpora.Dictionary(data_words)\n","# Create Corpus\n","texts = data_words\n","# Term Document Frequency\n","corpus = [id2word.doc2bow(text) for text in texts]"],"metadata":{"id":"VqEqR6AikTt4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# number of topics\n","num_topics = 75 #current best\n","num_words = 10\n","\n","# Build LDA model\n","lda_model1 =models.LdaMulticore(corpus=corpus,\n","                              id2word=id2word,\n","                              num_topics=num_topics,\n","                              passes=50)"],"metadata":{"id":"dvyHTK0uk2ep"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["topics = lda_model1.print_topics(num_topics=num_topics, num_words=num_words)\n","topic_list = []\n","for topic in topics:\n","  topic_list.append(topic[1])"],"metadata":{"id":"f4hU_n29n0Ap"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["topic_number_and_confidence_score= lda_model1.get_document_topics(corpus)"],"metadata":{"id":"Rbdq6w_woCQO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#save LDA Model\n","import pickle\n","\n","pickle.dump(lda_model1, open('/content/drive/MyDrive/Thesis/posts1352_standard_LDA_model.model', 'wb'))"],"metadata":{"id":"flN-w7nZq6jN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import pickle\n","\n","file_path = '/content/drive/MyDrive/Thesis/posts1352_standard_LDA_model.model'\n","with open(file_path , 'rb') as f:\n","  lda_model1=pickle.load(f)"],"metadata":{"id":"Kk5T9vJHYkSB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["rep_topic_list = []\n","\n","for x in topic_number_and_confidence_score:\n","  percentage = 0\n","  topic_number = -1\n","  for b in x:\n","    if b[1]>percentage:\n","      percentage = b[1]\n","      topic_number = b[0]\n","  rep_topic_list.append(topic_number)"],"metadata":{"id":"ToBhHf8jZNu_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["rep_list = []\n","for x in rep_topic_list:\n","  representations= lda_model1.get_topic_terms(x)\n","  representation = []\n","  for y in representations:\n","    representation.append(y[0])\n","  rep_list.append(representation)"],"metadata":{"id":"ZJD61PJmbPpf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df['Representation']=rep_list"],"metadata":{"id":"hKDoPkWlc52E"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.to_csv('/content/drive/MyDrive/Thesis/posts1352_standard_LDArepresentation.csv')"],"metadata":{"id":"Du9TnutldwXO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","df = pd.read_csv(\"/content/drive/MyDrive/Thesis/posts1352_standard_LDArepresentation.csv\")"],"metadata":{"id":"P3SMQl4ThR1q"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":562},"id":"2Az5GOLao41S","executionInfo":{"status":"ok","timestamp":1719997694187,"user_tz":-480,"elapsed":4,"user":{"displayName":"William","userId":"12834679953610585457"}},"outputId":"51f8170a-8f46-4829-d761-1e35f7cb009a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Unnamed: 0    No  Category SubCategory  \\\n","0              0     1      Race     Chinese   \n","1              1     2      Race      Indian   \n","2              2     4      Race      Indian   \n","3              3     5    Gender      Female   \n","4              4     6      Race       Malay   \n","...          ...   ...       ...         ...   \n","1615        1615  1349  Religion    Buddhism   \n","1616        1616  1350  Religion    Buddhism   \n","1617        1617  1351    Gender        Male   \n","1618        1618  1352    Gender      Female   \n","1619        1619  1352    Gender      Female   \n","\n","                                                   Post  HateSpeech  \\\n","0                                     Chinese are pigs!           1   \n","1            I don't like pajeets they smell like curry           1   \n","2     Indians always smell stinky and weird, what is...           1   \n","3     Women are so emotional they can't handle anyth...           1   \n","4     Malays are dependant on subsidiaries from the ...           1   \n","...                                                 ...         ...   \n","1615  You cannot build a temple in an area with majo...           1   \n","1616  Muslims should not enter temple, or they might...           1   \n","1617  Men that don't have job are useless piece of s...           1   \n","1618                           Women are dick machines.           1   \n","1619    Only want to suck and consume the biggest dick.           1   \n","\n","                                      PreprocessedToken  \\\n","0                                   ['chinese', 'pigs']   \n","1      ['unalike', 'pajeets', 'smell', 'like', 'curry']   \n","2               ['indians', 'smell', 'stinky', 'weird']   \n","3     ['women', 'emotional', 'handle', 'anything', '...   \n","4     ['malays', 'dependant', 'subsidiaries', 'gover...   \n","...                                                 ...   \n","1615  ['build', 'temple', 'area', 'majority', 'musli...   \n","1616  ['muslims', 'exit', 'temple', 'might', 'accide...   \n","1617  ['men', 'lack', 'job', 'useless', 'piece', 'sh...   \n","1618                      ['women', 'dick', 'machines']   \n","1619     ['want', 'suck', 'consume', 'biggest', 'dick']   \n","\n","                                         Representation  \n","0        [0, 29, 358, 336, 108, 148, 146, 66, 512, 205]  \n","1     [704, 2411, 3, 2206, 1050, 1673, 574, 1788, 17...  \n","2        [7, 204, 41, 838, 28, 291, 352, 234, 392, 146]  \n","3        [0, 29, 358, 336, 108, 148, 146, 66, 512, 205]  \n","4          [20, 1466, 132, 56, 17, 92, 396, 3, 176, 29]  \n","...                                                 ...  \n","1615  [248, 288, 29, 8, 87, 1155, 1548, 2005, 1875, ...  \n","1616  [197, 1285, 637, 2046, 2728, 1991, 55, 138, 22...  \n","1617  [1346, 204, 1082, 1772, 1514, 234, 30, 2344, 2...  \n","1618  [682, 2644, 1031, 17, 2065, 1633, 3, 244, 1291...  \n","1619  [635, 1102, 1180, 3010, 2292, 378, 20, 136, 68...  \n","\n","[1620 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-b91f9d14-5395-4b8d-90e7-0a3dbe550211\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>No</th>\n","      <th>Category</th>\n","      <th>SubCategory</th>\n","      <th>Post</th>\n","      <th>HateSpeech</th>\n","      <th>PreprocessedToken</th>\n","      <th>Representation</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>Race</td>\n","      <td>Chinese</td>\n","      <td>Chinese are pigs!</td>\n","      <td>1</td>\n","      <td>['chinese', 'pigs']</td>\n","      <td>[0, 29, 358, 336, 108, 148, 146, 66, 512, 205]</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>Race</td>\n","      <td>Indian</td>\n","      <td>I don't like pajeets they smell like curry</td>\n","      <td>1</td>\n","      <td>['unalike', 'pajeets', 'smell', 'like', 'curry']</td>\n","      <td>[704, 2411, 3, 2206, 1050, 1673, 574, 1788, 17...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>Race</td>\n","      <td>Indian</td>\n","      <td>Indians always smell stinky and weird, what is...</td>\n","      <td>1</td>\n","      <td>['indians', 'smell', 'stinky', 'weird']</td>\n","      <td>[7, 204, 41, 838, 28, 291, 352, 234, 392, 146]</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>Gender</td>\n","      <td>Female</td>\n","      <td>Women are so emotional they can't handle anyth...</td>\n","      <td>1</td>\n","      <td>['women', 'emotional', 'handle', 'anything', '...</td>\n","      <td>[0, 29, 358, 336, 108, 148, 146, 66, 512, 205]</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>Race</td>\n","      <td>Malay</td>\n","      <td>Malays are dependant on subsidiaries from the ...</td>\n","      <td>1</td>\n","      <td>['malays', 'dependant', 'subsidiaries', 'gover...</td>\n","      <td>[20, 1466, 132, 56, 17, 92, 396, 3, 176, 29]</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1615</th>\n","      <td>1615</td>\n","      <td>1349</td>\n","      <td>Religion</td>\n","      <td>Buddhism</td>\n","      <td>You cannot build a temple in an area with majo...</td>\n","      <td>1</td>\n","      <td>['build', 'temple', 'area', 'majority', 'musli...</td>\n","      <td>[248, 288, 29, 8, 87, 1155, 1548, 2005, 1875, ...</td>\n","    </tr>\n","    <tr>\n","      <th>1616</th>\n","      <td>1616</td>\n","      <td>1350</td>\n","      <td>Religion</td>\n","      <td>Buddhism</td>\n","      <td>Muslims should not enter temple, or they might...</td>\n","      <td>1</td>\n","      <td>['muslims', 'exit', 'temple', 'might', 'accide...</td>\n","      <td>[197, 1285, 637, 2046, 2728, 1991, 55, 138, 22...</td>\n","    </tr>\n","    <tr>\n","      <th>1617</th>\n","      <td>1617</td>\n","      <td>1351</td>\n","      <td>Gender</td>\n","      <td>Male</td>\n","      <td>Men that don't have job are useless piece of s...</td>\n","      <td>1</td>\n","      <td>['men', 'lack', 'job', 'useless', 'piece', 'sh...</td>\n","      <td>[1346, 204, 1082, 1772, 1514, 234, 30, 2344, 2...</td>\n","    </tr>\n","    <tr>\n","      <th>1618</th>\n","      <td>1618</td>\n","      <td>1352</td>\n","      <td>Gender</td>\n","      <td>Female</td>\n","      <td>Women are dick machines.</td>\n","      <td>1</td>\n","      <td>['women', 'dick', 'machines']</td>\n","      <td>[682, 2644, 1031, 17, 2065, 1633, 3, 244, 1291...</td>\n","    </tr>\n","    <tr>\n","      <th>1619</th>\n","      <td>1619</td>\n","      <td>1352</td>\n","      <td>Gender</td>\n","      <td>Female</td>\n","      <td>Only want to suck and consume the biggest dick.</td>\n","      <td>1</td>\n","      <td>['want', 'suck', 'consume', 'biggest', 'dick']</td>\n","      <td>[635, 1102, 1180, 3010, 2292, 378, 20, 136, 68...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1620 rows × 8 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b91f9d14-5395-4b8d-90e7-0a3dbe550211')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b91f9d14-5395-4b8d-90e7-0a3dbe550211 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b91f9d14-5395-4b8d-90e7-0a3dbe550211');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ef55fead-dcca-440f-b4f5-704a0ad042ac\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ef55fead-dcca-440f-b4f5-704a0ad042ac')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ef55fead-dcca-440f-b4f5-704a0ad042ac button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_21ac2285-f419-459b-9caf-074361dce91b\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_21ac2285-f419-459b-9caf-074361dce91b button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 1620,\n  \"fields\": [\n    {\n      \"column\": \"Unnamed: 0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 467,\n        \"min\": 0,\n        \"max\": 1619,\n        \"num_unique_values\": 1620,\n        \"samples\": [\n          135,\n          479,\n          1572\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"No\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 389,\n        \"min\": 1,\n        \"max\": 1352,\n        \"num_unique_values\": 1119,\n        \"samples\": [\n          332,\n          154,\n          1195\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Race\",\n          \"Gender\",\n          \"Religion\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SubCategory\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"Male\",\n          \"Hinduism\",\n          \"Chinese\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Post\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1609,\n        \"samples\": [\n          \"Islam people act like they are very holy, but some of them still commit to crime.\",\n          \"Smart man + smart woman = Romance.\",\n          \"Malay all bodoh lah, why do u think they need bumi rights?\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HateSpeech\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PreprocessedToken\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1599,\n        \"samples\": [\n          \"['broke', 'trash', 'door', 'chink', 'house']\",\n          \"['happens', 'diff', 'ethnicity', 'racism', 'comes', 'play']\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Representation\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 75,\n        \"samples\": [\n          \"[28, 3, 24, 29, 33, 2225, 264, 266, 265, 938]\",\n          \"[1064, 19, 316, 2311, 1990, 136, 87, 28, 1379, 1224]\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":177}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","#x_train2, x_test2, y_train2, y_test2 = train_test_split(df['Representation'], df['HateSpeech'], test_size=0.3)\n","x_train, x_test, y_train, y_test = train_test_split(df['Representation'], df['HateSpeech'], test_size=0.2)"],"metadata":{"id":"Wz5yUiRtqXL6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x_train = list(x_train)\n","x_test = list(x_test)\n","y_train = list(y_train)\n","y_test = list(y_test)"],"metadata":{"id":"6LYaym0F145P"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.naive_bayes import GaussianNB\n","gnb = GaussianNB()\n","gnb.fit(x_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"KT_Eh4VLr0RT","executionInfo":{"status":"ok","timestamp":1719997618639,"user_tz":-480,"elapsed":5,"user":{"displayName":"William","userId":"12834679953610585457"}},"outputId":"5f7afddf-aa8e-4930-b510-b13fc75787b9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["GaussianNB()"],"text/html":["<style>#sk-container-id-30 {color: black;background-color: white;}#sk-container-id-30 pre{padding: 0;}#sk-container-id-30 div.sk-toggleable {background-color: white;}#sk-container-id-30 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-30 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-30 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-30 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-30 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-30 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-30 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-30 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-30 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-30 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-30 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-30 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-30 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-30 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-30 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-30 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-30 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-30 div.sk-item {position: relative;z-index: 1;}#sk-container-id-30 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-30 div.sk-item::before, #sk-container-id-30 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-30 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-30 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-30 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-30 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-30 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-30 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-30 div.sk-label-container {text-align: center;}#sk-container-id-30 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-30 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-30\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GaussianNB()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-30\" type=\"checkbox\" checked><label for=\"sk-estimator-id-30\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GaussianNB</label><div class=\"sk-toggleable__content\"><pre>GaussianNB()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":164}]},{"cell_type":"code","source":["y_pred = gnb.predict(x_test)"],"metadata":{"id":"H8V2jJLZ2Ji5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn import metrics\n","print(\"Gaussian Naive Bayes model accuracy(in %):\", metrics.accuracy_score(y_test, y_pred)*100)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xdVXHzDM2Qrp","executionInfo":{"status":"ok","timestamp":1719997622424,"user_tz":-480,"elapsed":383,"user":{"displayName":"William","userId":"12834679953610585457"}},"outputId":"577c2f21-af89-4726-abbc-fc979c35de83"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Gaussian Naive Bayes model accuracy(in %): 53.70370370370371\n"]}]},{"cell_type":"code","source":["from sklearn.naive_bayes import MultinomialNB\n","gnb2 = MultinomialNB(fit_prior=False)\n","gnb2.fit(x_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"Ub3ffquX7928","executionInfo":{"status":"ok","timestamp":1719997624375,"user_tz":-480,"elapsed":5,"user":{"displayName":"William","userId":"12834679953610585457"}},"outputId":"039b5964-850c-4e7e-b2b0-8993165bffec"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["MultinomialNB(fit_prior=False)"],"text/html":["<style>#sk-container-id-31 {color: black;background-color: white;}#sk-container-id-31 pre{padding: 0;}#sk-container-id-31 div.sk-toggleable {background-color: white;}#sk-container-id-31 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-31 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-31 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-31 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-31 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-31 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-31 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-31 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-31 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-31 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-31 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-31 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-31 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-31 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-31 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-31 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-31 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-31 div.sk-item {position: relative;z-index: 1;}#sk-container-id-31 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-31 div.sk-item::before, #sk-container-id-31 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-31 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-31 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-31 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-31 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-31 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-31 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-31 div.sk-label-container {text-align: center;}#sk-container-id-31 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-31 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-31\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>MultinomialNB(fit_prior=False)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-31\" type=\"checkbox\" checked><label for=\"sk-estimator-id-31\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">MultinomialNB</label><div class=\"sk-toggleable__content\"><pre>MultinomialNB(fit_prior=False)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":167}]},{"cell_type":"code","source":["y_pred = gnb2.predict(x_test)"],"metadata":{"id":"HgSUhD207_VT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn import metrics #\n","print(\"Multinomial Naive Bayes model accuracy(in %):\", metrics.accuracy_score(y_test, y_pred)*100) #53.71"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AQVXZHDO8A47","executionInfo":{"status":"ok","timestamp":1719997626111,"user_tz":-480,"elapsed":2,"user":{"displayName":"William","userId":"12834679953610585457"}},"outputId":"ac90a7f8-a588-4eb3-e2ce-d0f18250bc27"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Multinomial Naive Bayes model accuracy(in %): 53.70370370370371\n"]}]},{"cell_type":"code","source":["from sklearn.naive_bayes import BernoulliNB\n","gnb3 = BernoulliNB(fit_prior=False)\n","gnb3.fit(x_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"y1zq2JP08CDj","executionInfo":{"status":"ok","timestamp":1719997628575,"user_tz":-480,"elapsed":4,"user":{"displayName":"William","userId":"12834679953610585457"}},"outputId":"1779265e-b81a-4b19-bfb7-891d51005fae"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["BernoulliNB(fit_prior=False)"],"text/html":["<style>#sk-container-id-32 {color: black;background-color: white;}#sk-container-id-32 pre{padding: 0;}#sk-container-id-32 div.sk-toggleable {background-color: white;}#sk-container-id-32 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-32 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-32 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-32 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-32 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-32 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-32 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-32 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-32 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-32 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-32 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-32 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-32 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-32 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-32 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-32 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-32 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-32 div.sk-item {position: relative;z-index: 1;}#sk-container-id-32 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-32 div.sk-item::before, #sk-container-id-32 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-32 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-32 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-32 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-32 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-32 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-32 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-32 div.sk-label-container {text-align: center;}#sk-container-id-32 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-32 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-32\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>BernoulliNB(fit_prior=False)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-32\" type=\"checkbox\" checked><label for=\"sk-estimator-id-32\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">BernoulliNB</label><div class=\"sk-toggleable__content\"><pre>BernoulliNB(fit_prior=False)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":170}]},{"cell_type":"code","source":["y_pred = gnb3.predict(x_test)"],"metadata":{"id":"r4q3WMjF8DY6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn import metrics\n","print(\"Bernoulli Naive Bayes model accuracy(in %):\", metrics.accuracy_score(y_test, y_pred)*100) #53.08"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kxoIzluE8Ebb","executionInfo":{"status":"ok","timestamp":1719997630218,"user_tz":-480,"elapsed":2,"user":{"displayName":"William","userId":"12834679953610585457"}},"outputId":"d63ad32e-643b-4bab-8898-073e8d3618fd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Bernoulli Naive Bayes model accuracy(in %): 50.0\n"]}]}]}